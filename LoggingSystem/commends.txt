# Logging files store information about events that occur when operating system and applications are run, including any errors and security alerts

syslogd: deamon used to automatically log events on your computer (syslog, rsyslog, syslog-in)
    /etc/rsyslog.conf --> from here the process is managed

# rsyslog rules determine what kind of information is logged, what programs have their messages logged and where that log is stored

#########################
####### R U L E S #######
#########################

    facility.prority            action

        * 'facility' --> reference to the program, such as mail, karnel or lpr, whose message are being logged
        * 'priority' --> determines what kind of messages to log for that program
        * 'action'   --> reference the location where the log will be sent
    
    # facility : refers to whatever software is generating the log, whether that's the karnel, the mail system, ot the user

        --> The following is the list of valid codes that can be used in place of the facility keyword in our configuration file rules:
            ~ auth/authpriv     :   Security/authorisation messages
            ~ cron              :   Clock deamons
            ~ deamon            :   Other deamons
            ~ kern              :   Karnel messages
            ~ lpr               :   Printing system
            ~ mail              :   mail system
            ~ user              :   Generic user-level messsages
        
        An asterisk wildcard (*) in place of a word refers to all facilities. You can select more than one facility by listing them separated by comma.
    
    # priority : tells the system what kinds of messeges to log

        ! Codes are listed from lowest priority, starting at 'debug', to highest priority, ending at 'panic'.
        ! If the priority is * messages of all priorities are logged
        ! When you specify a priority, messages of that priority and higher are logged
            f.e. if you specofy a priority code of alert, the system will log messages classified as 'alert' and higher priority, but it won't log messages marked as 'crit' or any priority lower than 'alert'
        
        --> full list of valid codes for priority

        debug < info < notice < warning < warn < error < err < critt < alert < emerg < panic
            ! the codes warning, warn, error, err, emerg andpanic have all been deprecated and should not be used
        
    #action    : usually it's a filename and location where the logs should be sent
        ! log files are sent to /var/log directory with a filename that describes the facility that generated them (f.e. auth)
            f.e. log generated by auth facility would be sent to /var/log.auth.log

        examples:
            mail.* /var/log/mail        :   Will log mail events of all priorities to /var/log/mail
            kern.crit /var/log/karnel   :   Will log karnel events of critical priority or higher to /car/log/karnel
            *.emerg.*                   :   Will log events of the emergency priority to all logged-on users

logrotate:  to determine the balance between these opposing requirements by rotating your logs

    Log rotation is the process of regularly archiving log files by moving them to the some other location, leaving you with a fresh log file.
        That archived location will then get cleaned up after a specified period of time.
    The system is already rotating log fiels using a 'cron' job that employes the logrotate utility.
        You can configure the logrotate utility to choose the regularity of your log rotation with the /etc/logrotate.conf text file
    At the end of each rotation period, the log files are renamed and pushed towards the end of the chain of logs as a new log file is created, replacing the current log file
        If 4 weeks wirth of backlogs are kept, the fiels wont go further than /vat/log/log.4
    

    /etc/logrotate.conf :   contains the informations about logrotating
        # Rotate log files weekly/dayly/yearly/...
        # Keep x weeks/days/years/... worth of backlogs
    
# Konkretno uničevanje te datoteke

    shred:  built-in command, to delete the file and overwrite it several time, so it is much harder to recover it

        shred <file>    :       Will delete a file and overwrite it several times - by default it shreds 4 times
        ! Overwriting taked time !

        shred -f <file> :       changes the permission on the files to allow overwriting if a permission change is necessary
        shred -n <file> :       lets you choose how many times to overwrite the file

# Disabling Logging --> requires root privilages

    service rsyslog stop
        Now Linux will stop generating log files until the service is restarted, enabling you to operate without leaving behind any evidence in the log files
        
